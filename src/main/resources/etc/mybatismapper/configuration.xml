<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="configuration">

	<cache />

	<select id="loadAllTaskCode" resultType="String">
		SELECT t.code
		FROM
		usertask t;
	</select>

	<select id="loadTask" resultType="org.uario.seaworkengine.model.UserTask"
		parameterType="Integer">
		SELECT id,
		code,
		description, isabsence, recorded,
		overflow, endoperation,
		delayoperation, changeshift, hiddentask 
		FROM usertask
		WHERE id=#{id};
	</select>

	<select id="loadAllShiftCode" resultType="String">
		SELECT s.code
		FROM
		usershift s
	</select>


	<select id="loadShiftById" resultType="org.uario.seaworkengine.model.UserShift">
		SELECT id, code,
		description, presence, forceable, break_shift, disease_shift,
		accident_shift, waitbreak_shift, standard_shift, daily_shift, recorded
		FROM usershift
		WHERE id=#{id};
	</select>
	
	<select id="listAllHiddenTask" resultType="org.uario.seaworkengine.model.UserTask">
		SELECT t.id,
		t.code,
		t.description,
		t.isabsence,
		t.recorded,
		t.endoperation,
		t.overflow,
		t.changeshift,
		t.delayoperation, 
		t.hiddentask 
		FROM usertask t
		WHERE t.hiddentask = 1;
	</select>

	<select id="listAllAbsenceTask" resultType="org.uario.seaworkengine.model.UserTask">
		SELECT t.id,
		t.code,
		t.description,
		t.isabsence,
		t.recorded,
		t.endoperation,
		t.overflow,
		t.changeshift,
		t.delayoperation, 
		t.hiddentask 
		FROM usertask t
		WHERE t.isabsence = 1;

	</select>


	<select id="selectAllTasks" resultType="org.uario.seaworkengine.model.UserTask">
		SELECT id,
		code,
		description, isabsence, recorded, endoperation,
		overflow, delayoperation, changeshift, hiddentask 
		FROM usertask
		order by description;

	</select>

	<select id="selectAllTasksFulltextSearchLike" parameterType="map"
		resultType="org.uario.seaworkengine.model.UserTask">
		SELECT id,
		code,
		description, isabsence, recorded, endoperation,
		overflow, delayoperation, changeshift, hiddentask 
		FROM
		usertask
		<if test="my_full_text_search != null">
			WHERE (
			code like CONCAT('%', #{my_full_text_search}, '%')
			or
			description like CONCAT('%', #{my_full_text_search}, '%')
			)
		</if>
		ORDER BY description;
	</select>

	<select id="selectAllDefaultShifts" resultType="org.uario.seaworkengine.model.UserShift">
		SELECT id, code,
		description, presence, forceable, break_shift, disease_shift,
		accident_shift, waitbreak_shift, standard_shift, daily_shift, recorded
		FROM usershift
		WHERE (break_shift='1' or disease_shift='1' or
		accident_shift='1' or waitbreak_shift='1' or standard_shift='1' or
		daily_shift='1')
		ORDER BY description;
	</select>

	<select id="selectAllShifts" resultType="org.uario.seaworkengine.model.UserShift">
		SELECT id, code,
		description, presence, forceable, break_shift, disease_shift,
		accident_shift, waitbreak_shift, standard_shift, daily_shift, recorded
		FROM usershift
		ORDER BY description;
	</select>

	<select id="selectAllShiftsFulltextSearchLike" parameterType="map"
		resultType="org.uario.seaworkengine.model.UserShift">
		SELECT id, code, description, presence, forceable, break_shift,
		disease_shift, accident_shift, waitbreak_shift, standard_shift,
		daily_shift, recorded
		FROM usershift
		<if test="my_full_text_search != null">
			WHERE (
			code like CONCAT('%', #{my_full_text_search}, '%')
			or
			description like CONCAT('%', #{my_full_text_search}, '%')
			)
		</if>
		ORDER BY description;
	</select>

	<delete id="deleteTask" parameterType="int">
		delete from usertask where
		id = #{id}
	</delete>

	<delete id="deleteShift" parameterType="int">
		delete from usershift
		where
		id = #{id}
	</delete>

	<insert id="insertTask" parameterType="org.uario.seaworkengine.model.UserTask">
		INSERT INTO usertask
		(code,
		description, isabsence, recorded, endoperation, overflow,
		delayoperation, changeshift, hiddentask)
		VALUES
		(#{code},#{description},
		#{isabsence},
		#{recorded}, #{endoperation}, #{overflow},
		#{delayoperation}, #{changeshift}, #{hiddentask});

	</insert>

	<insert id="insertShift" parameterType="org.uario.seaworkengine.model.UserShift">
		INSERT INTO
		usershift
		(code,
		description,
		presence, forceable, break_shift, disease_shift,
		accident_shift, waitbreak_shift, standard_shift, daily_shift,
		recorded)
		VALUES
		(#{code},#{description},#{presence},#{forceable},#{break_shift},
		#{disease_shift}, #{accident_shift}, #{waitbreak_shift},
		#{standard_shift}, #{daily_shift}, #{recorded});
	</insert>


	<update id="updateTask" parameterType="org.uario.seaworkengine.model.UserTask">
		UPDATE
		usertask
		SET
		id =
		#{id},
		code = #{code}, 
		description = #{description}, 
		isabsence = #{isabsence},
		recorded = #{recorded},
		endoperation = #{endoperation},
		overflow = #{overflow},
		delayoperation = #{delayoperation},
		changeshift = #{changeshift}, 
		hiddentask = #{hiddentask} 
		WHERE id = #{id}

	</update>

	<update id="updateShift" parameterType="org.uario.seaworkengine.model.UserShift">
		UPDATE
		usershift
		SET
		id =
		#{id},
		code = #{code},
		description = #{description},
		presence =
		#{presence},
		forceable = #{forceable},
		break_shift = #{break_shift},
		disease_shift = #{disease_shift},
		accident_shift = #{accident_shift},
		waitbreak_shift = #{waitbreak_shift},
		standard_shift = #{standard_shift},
		daily_shift = #{daily_shift},
		recorded = #{recorded} 
		WHERE id = #{id};


	</update>

	<insert id="addStatus" parameterType="String">
		INSERT INTO status
		(description)
		VALUES (#{description});
	</insert>

	<delete id="removeStatus">
		DELETE FROM status
		WHERE description=#{description};
	</delete>

	<select id="selectAllStatus" resultType="String">
		SELECT description
		FROM
		status;
	</select>

	<update id="updateStatus" parameterType="String">
		UPDATE status
		SET
		description = #{description}
		WHERE d
	</update>

	<update id="removeAllBreakShift">
		UPDATE usershift
		SET break_shift = 0;
	</update>

	<update id="setShiftAsBreak" parameterType="Integer">
		UPDATE usershift
		SET
		break_shift = 1, forceable = 0, presence = 0
		WHERE id =
		#{id_usershift};
	</update>

	<update id="removeAllDiseaseShift">
		UPDATE usershift
		SET disease_shift = 0;
	</update>

	<update id="setShiftAsDisease" parameterType="Integer">
		UPDATE usershift
		SET disease_shift = 1, forceable = 0, presence = 0
		WHERE id =
		#{id_usershift};
	</update>

	<update id="removeAllAccidentShift">
		UPDATE usershift
		SET accident_shift = 0;
	</update>

	<update id="setShiftAsAccident" parameterType="Integer">
		UPDATE usershift
		SET accident_shift = 1, forceable = 0, presence = 0
		WHERE id =
		#{id_usershift};
	</update>

	<update id="removeAllWaitBreakShift">
		UPDATE usershift
		SET waitbreak_shift = 0;
	</update>

	<update id="setShiftAsWaitBreak" parameterType="Integer">
		UPDATE usershift
		SET waitbreak_shift = 1, forceable = 0, presence = 0
		WHERE id =
		#{id_usershift};
	</update>

	<update id="removeAllStandardShift">
		UPDATE usershift
		SET standard_shift = 0;
	</update>

	<update id="setShiftAsStandardShift" parameterType="Integer">
		UPDATE
		usershift
		SET standard_shift = 1, forceable = 0, presence = 1
		WHERE id =
		#{id_usershift};
	</update>

	<update id="removeAllDailyShift">
		UPDATE usershift
		SET daily_shift = 0;
	</update>

	<update id="setShiftAsDailyShift" parameterType="Integer">
		UPDATE usershift
		SET daily_shift = 1, forceable = 1, presence = 1
		WHERE id =
		#{id_usershift};
	</update>

	<update id="removeAllEndoperationTasks">
		UPDATE usertask
		SET endoperation = 0;
	</update>

	<update id="setTaskAsEndoperation" parameterType="Integer">
		UPDATE usertask
		SET endoperation = 1
		WHERE id =
		#{idTask};
	</update>

	<update id="removeAllChangeshiftTasks">
		UPDATE usertask
		SET changeshift = 0;
	</update>

	<update id="setTaskAsChangeshift" parameterType="Integer">
		UPDATE usertask
		SET changeshift = 1
		WHERE id =
		#{idTask};
	</update>

	<update id="removeAllOverflowTasks">
		UPDATE usertask
		SET overflow = 0;
	</update>

	<update id="setTaskAsOverflow" parameterType="Integer">
		UPDATE usertask
		SET
		overflow = 1
		WHERE id =
		#{idTask};
	</update>

	<select id="getOverflowTask" resultType="org.uario.seaworkengine.model.UserTask">
		SELECT *
		FROM usertask
		WHERE overflow=1;
	</select>

	<select id="getChangeshiftTask" resultType="org.uario.seaworkengine.model.UserTask">
		SELECT *
		FROM usertask
		WHERE changeshift=1;
	</select>

	<select id="getEndOperationTask" resultType="org.uario.seaworkengine.model.UserTask">
		SELECT *
		FROM
		usertask
		WHERE endoperation=1;
	</select>

	<select id="getDelayOperationTask" resultType="org.uario.seaworkengine.model.UserTask">
		SELECT *
		FROM
		usertask
		WHERE delayoperation=1;
	</select>

	<select id="listSpecialTaskMobile" resultType="org.uario.seaworkengine.model.UserTask">
		SELECT *
		FROM
		usertask
		WHERE overflow=1 or endoperation=1 or delayoperation=1 or
		changeshift=1 or changeshift=1;
	</select>

	<update id="removeAllDelayOperationTasks">
		UPDATE usertask
		SET delayoperation = 0;
	</update>

	<update id="setTaskAsDelayOperation" parameterType="Integer">
		UPDATE
		usertask
		SET delayoperation = 1
		WHERE id =
		#{idTask};
	</update>




</mapper>