<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="schedule">

	<cache />





	<select id="loadScheduleByDate" parameterType="map"
		resultType="org.uario.seaworkengine.model.Schedule">
		<![CDATA[
SELECT 
    id,
    date_schedule,
    user,
    note,
    editor,
    controller,
    shift,
    sync_mobile_1,
    sync_mobile_2,
    sync_mobile_3,
    sync_mobile_4,
    break_ex
FROM
    schedule
WHERE
    date_schedule = #{dt_arg};
    ]]>	
	</select>

	<select id="loadScheduleById" parameterType="Integer"
		resultType="org.uario.seaworkengine.model.Schedule">
<![CDATA[		
SELECT 
    id,
    date_schedule,
    user,
    note,
    editor,
    controller,
    shift,
    sync_mobile_1,
    sync_mobile_2,
    sync_mobile_3,
    sync_mobile_4,
    break_ex
FROM
    schedule
WHERE
    id = #{id}
]]>		
	</select>


	<select id="selectSchedulersForPreprocessingOnUserId"
		resultType="org.uario.seaworkengine.model.Schedule" parameterType="map">
	<![CDATA[	
select 
    s.id,
    u.id as user,
    s.shift,
    s.date_schedule,
    s.sync_mobile_1,
    s.sync_mobile_2,
    s.sync_mobile_3,
    s.sync_mobile_4,
    break_ex,
    concat(u.lastname, ' ', u.firstname) AS name_user
from
    user u
        left join
    schedule s ON (u.id = s.user
        and s.date_schedule >= #{date_from}
        and s.date_schedule < #{date_to})
where
    u.id = #{userid}
order by u.lastname asc
]]>
	</select>


	<select id="selectSchedulersForPreprocessing" resultType="org.uario.seaworkengine.model.Schedule"
		parameterType="map">
<![CDATA[
select 
    s.id,
    u.id as user,
    s.shift,
    s.date_schedule,
    s.sync_mobile_1,
    s.sync_mobile_2,
    s.sync_mobile_3,
    s.sync_mobile_4,
    break_ex,
    concat(u.lastname, ' ', u.firstname) AS name_user
from
    user u
        left join
    schedule s ON (u.id = s.user
        and s.date_schedule >= #{date_from}
        and s.date_schedule < #{date_to})
where
    u.status = 'IN ORGANICO'
        and u.out_schedule = 0
]]>        

		<if test="my_full_text_search != null">
		<![CDATA[
			and (u.firstname like CONCAT('%', #{my_full_text_search},'%') or
			u.lastname like CONCAT('%', #{my_full_text_search},'%') or
			u.employee_identification = #{my_full_text_search})
		]]>   	
		</if>

		order by u.lastname asc

	</select>


	<insert id="createSchedule" parameterType="org.uario.seaworkengine.model.Schedule">
		INSERT INTO
		schedule
		(date_schedule, user, editor, controller, note,shift)
		VALUES
		(#{date_schedule}, #{user}, #{editor}, #{controller},#{note},
		#{shift});
	</insert>



	<update id="updateSchedule" parameterType="org.uario.seaworkengine.model.Schedule">
		UPDATE schedule
		SET
		id =
		#{id},
		date_schedule = #{date_schedule},
		user = #{user},
		editor =
		#{editor},
		controller = #{controller},
		note = #{note},
		shift = #{shift}
		WHERE id = #{id};
	</update>




	<select id="getLastShiftProgram" parameterType="map" resultType="int">
	<![CDATA[
select 
    max(dfs.shift)
from
    detailinitialschedule dfs,
    schedule s
where
    s.user = #{id_user}
        and s.id = dfs.id_schedule
        and s.date_schedule = #{date_schedule}
	]]> 
		
	</select>

	<select id="getLastShiftRevision" parameterType="map"
		resultType="int">
		<![CDATA[
select 
    max(dfs.shift)
from
    detailfinalschedule dfs,
    schedule s
where
    s.user = #{id_user}
        and s.id = dfs.id_schedule
        and s.date_schedule = #{date_schedule}
       ]]>        
		
	</select>

	<select id="getFirstShiftProgram" parameterType="map"
		resultType="int">
		select min(dfs.shift)
		from detailinitialschedule dfs,
		schedule s
		where
		s.user = #{id_user} and
		s.id = dfs.id_schedule and
		s.date_schedule =
		#{date_schedule}
	</select>

	<select id="getFirstShiftRevision" parameterType="map"
		resultType="int">
		select
		min(dfs.shift)
		from detailfinalschedule dfs, schedule
		s
		where s.user = #{id_user} and s.id = dfs.id_schedule and
		s.date_schedule = #{date_schedule}
	</select>

	<select id="selectScheduleByDateAndUser" resultType="org.uario.seaworkengine.model.Schedule"
		parameterType="map">
		SELECT s.id, s.date_schedule, s.user, s.editor,
		s.controller,
		s.shift,s.note,
		s.sync_mobile_1,
		s.sync_mobile_2,
		s.sync_mobile_3,
		s.sync_mobile_4,
		break_ex
		FROM schedule s
		WHERE s.user =
		#{id_user}
		and
		s.date_schedule =
		#{date_schedule};
	</select>

	<delete id="removeScheduleByDateAndUser" parameterType="map">
		DELETE
		FROM
		schedule
		WHERE
		user = #{id_user} and
		date_schedule =
		#{date_schedule};
	</delete>

	<select id="selectScheduleInIntervalDateByUserId" parameterType="map"
		resultType="org.uario.seaworkengine.model.Schedule">
		SELECT id, date_schedule, user, note, editor, controller,
		shift,
		sync_mobile_1,
		sync_mobile_2,
		sync_mobile_3,
		sync_mobile_4,
		break_ex
		FROM
		schedule
		WHERE
		user=#{user} and date_schedule >=
		#{date_from} and
		#{date_to} >=
		date_schedule order by date_schedule
		asc;
	</select>

	<select id="selectAggregateScheduleProgram" resultType="org.uario.seaworkengine.model.Schedule"
		parameterType="map">
<![CDATA[		
select 
    s.id,
    s.shift,
    s.sync_mobile_1,
    s.sync_mobile_2,
    s.sync_mobile_3,
    s.sync_mobile_4,
    break_ex,
    ds.shift as no_shift,
    sum(ds.time) as program_time,
    s.date_schedule,
    s.note,
    s.editor,
    s.controller,
    u.id as user,
    concat(u.lastname, ' ', u.firstname) AS name_user
from
    user u,
    schedule s
        left join
    detailinitialschedule ds ON (s.id = ds.id_schedule)
where
    u.id = s.user
        and s.date_schedule >= #{date_from}
        and s.date_schedule < #{date_to}
        and u.status = 'IN ORGANICO'
        and u.out_schedule = 0
  ]]>

		<if test="my_full_text_search != null">
			<![CDATA[
			and (u.firstname like CONCAT('%',#{my_full_text_search},'%') 
			or u.lastname like CONCAT('%', #{my_full_text_search}, '%') 
			or u.employee_identification = #{my_full_text_search})
			]]>
		</if>

		group by user , s.id , no_shift
		order by user, s.date_schedule asc

	</select>

	<select id="selectAggregateScheduleRevision" resultType="org.uario.seaworkengine.model.Schedule"
		parameterType="map">
<![CDATA[
select 
    s.id,
    s.shift,
    s.sync_mobile_1,
    s.sync_mobile_2,
    s.sync_mobile_3,
    s.sync_mobile_4,
    break_ex,
    ds.shift as no_shift,
    sum(ds.time) as revision_time,
    s.date_schedule,
    s.note,
    s.editor,
    s.controller,
    ds.continueshift,
    u.id as user,
    concat(u.lastname, ' ', u.firstname) AS name_user
from
    user u,
    schedule s
        left join
    detailfinalschedule ds ON (s.id = ds.id_schedule)
where
    u.id = s.user
        and s.date_schedule >= #{date_from}
        and s.date_schedule < #{date_to}
        and u.status = 'IN ORGANICO'
        and u.out_schedule = 0
]]>
		<if test="my_full_text_search != null">
		<![CDATA[
			and (u.firstname like CONCAT('%', #{my_full_text_search},'%') or
			u.lastname like CONCAT('%',#{my_full_text_search},'%') 
			or u.employee_identification = #{my_full_text_search})
			]]>
		</if>

		group by user , s.id , no_shift
		order by user, s.date_schedule
		asc

	</select>

	<select id="selectAggregateScheduleByDateProgram" resultType="org.uario.seaworkengine.model.Schedule"
		parameterType="map">
<![CDATA[
select 
    s.id,
    s.shift,
    s.sync_mobile_1,
    s.sync_mobile_2,
    s.sync_mobile_3,
    s.sync_mobile_4,
    break_ex,
    ds.shift as no_shift,
    sum(ds.time) as program_time,
    s.date_schedule,
    s.note,
    s.editor,
    s.controller,
    u.id as user,
    concat(u.lastname, ' ', u.firstname) AS name_user
from
    user u,
    schedule s
        left join
    detailinitialschedule ds ON (s.id = ds.id_schedule)
where
    u.id = s.user
        and s.date_schedule = #{date_from}
        and u.status = 'IN ORGANICO'
        and u.out_schedule = 0
]]>
		<if test="my_full_text_search != null">
		<![CDATA[
			and (u.firstname like CONCAT('%', #{my_full_text_search},'%')
			or u.lastname like CONCAT('%', #{my_full_text_search}, '%') 
			or u.employee_identification = #{my_full_text_search})
			]]>
		</if>

<![CDATA[
		group by user , s.id , no_shift
		order by user, s.date_schedule asc
]]>
	</select>

	<select id="selectAggregateScheduleByDateRevision" resultType="org.uario.seaworkengine.model.Schedule"
		parameterType="map">
		
		<![CDATA[			
select 
    s.id,
    s.shift,
    s.sync_mobile_1,
    s.sync_mobile_2,
    s.sync_mobile_3,
    s.sync_mobile_4,
    break_ex,
    ds.shift as no_shift,
    ds.continueshift,
    sum(ds.time) as revision_time,
    s.date_schedule,
    s.note,
    s.editor,
    s.controller,
    u.id as user,
    concat(u.lastname, ' ', u.firstname) AS name_user
from
    user u,
    schedule s
        left join
    detailfinalschedule ds ON (s.id = ds.id_schedule)
where
    u.id = s.user
        and s.date_schedule = '2016-12-28'
        and u.status = 'IN ORGANICO'
        and u.out_schedule = 0
        ]]>
       
       <if test="my_full_text_search != null">
			<![CDATA[
		and (u.firstname like CONCAT('%',#{my_full_text_search},'%') 
		or u.lastname like CONCAT('%',#{my_full_text_search},'%')
		or u.employee_identification = #{my_full_text_search})
			]]>
		</if>
group by user , s.id , no_shift
order by user , s.date_schedule asc

	</select>


	<insert id="createDetailInitialSchedule" parameterType="org.uario.seaworkengine.model.DetailInitialSchedule">
		INSERT
		INTO
		detailinitialschedule (id_schedule, shift,
		task,time,time_from,time_to, time_vacation,continueshift)
		VALUES
		(#{id_schedule},
		#{shift},#{task}, #{time},
		#{time_from},#{time_to},#{time_vacation},#{continueshift});
	</insert>

	<insert id="createDetailFinalSchedule" parameterType="org.uario.seaworkengine.model.DetailFinalSchedule">
		INSERT INTO
		detailfinalschedule (id_schedule, shift, task, time, time_from,
		time_to, time_vacation, id_ship, crane, board,
		reviewshift,continueshift)
		VALUES
		(#{id_schedule},#{shift},#{task},#{time},#{time_from},#{time_to},
		#{time_vacation}, #{id_ship}, #{crane}, #{board},
		#{reviewshift},#{continueshift});
	</insert>



	<select id="loadDetailInitialScheduleByIdScheduleAndShift"
		resultType="org.uario.seaworkengine.model.DetailInitialSchedule"
		parameterType="map">
		SELECT id, id_schedule, shift, task, time, time_from,
		time_to, time_vacation, continueshift
		FROM
		detailinitialschedule
		WHERE id_schedule =
		#{id_schedule} and shift =
		#{shift}
		order by time_from asc;
	</select>

	<select id="loadDetailFinalScheduleByIdScheduleAndShift"
		resultType="org.uario.seaworkengine.model.DetailFinalSchedule"
		parameterType="map">
		SELECT df.id, df.id_schedule, df.shift, df.task,
		df.time, df.time_from,
		df.time_to, df.time_vacation, df.id_ship,
		df.crane, s.name as nameShip, df.board,
		df.reviewshift,df.continueshift
		FROM detailfinalschedule df LEFT
		JOIN ship
		s ON df.id_ship = s.id
		WHERE
		df.id_schedule =
		#{id_schedule} and
		df.shift = #{shift}
		order by
		df.time_from asc;
	</select>

	<select id="loadDetailInitialScheduleByIdSchedule"
		parameterType="Integer" resultType="org.uario.seaworkengine.model.DetailInitialSchedule">
		SELECT id, id_schedule, shift,
		task, time, time_from, time_to, time_vacation, continueshift
		FROM
		detailinitialschedule
		WHERE id_schedule =
		#{id_schedule}
	</select>

	<select id="loadDetailFinalScheduleByIdSchedule" parameterType="Integer"
		resultType="org.uario.seaworkengine.model.DetailFinalSchedule">
		SELECT df.id, df.id_schedule, df.shift, df.task, df.time,
		df.time_from,
		df.time_to, df.time_vacation, df.id_ship,
		df.crane,df.continueshift,
		df.board,
		s.name as nameShip
		FROM detailfinalschedule df LEFT JOIN ship
		s ON
		df.id_ship
		= s.id
		WHERE
		id_schedule =
		#{id_schedule};
	</select>


	<delete id="removeAllDetailInitialScheduleByScheduleAndShift"
		parameterType="map">
		DELETE FROM
		detailinitialschedule
		WHERE id_schedule =
		#{id_schedule} and shift
		= #{shift};
	</delete>

	<delete id="removeAllDetailFinalScheduleByScheduleAndShift"
		parameterType="map">
		DELETE FROM
		detailfinalschedule
		WHERE id_schedule =
		#{id_schedule} and shift
		= #{shift};
	</delete>






	<delete id="removeAllDetailInitialScheduleBySchedule"
		parameterType="map">
		DELETE FROM
		detailinitialschedule
		WHERE id_schedule =
		#{id_schedule};
	</delete>

	<delete id="removeAllDetailFinalScheduleBySchedule"
		parameterType="map">
		DELETE FROM
		detailfinalschedule
		WHERE id_schedule =
		#{id_schedule};
	</delete>

	<delete id="removeScheduleUser" parameterType="map">
		<![CDATA[
		DELETE FROM
		schedule
		WHERE user=#{idUser} and date_schedule>=#{initialDate} and #{finalDate}>=date_schedule;
		]]>
	</delete>





	<!-- MOBILE -->

	<update id="updateScheduleNote" parameterType="map">
		UPDATE schedule
		SET
		note = #{note}
		WHERE id = #{id_schedule};
	</update>

	<update id="updateMobileSynch1" parameterType="map">
		UPDATE schedule
		SET
		sync_mobile_1 = #{sync_mobile}
		WHERE id = #{id};
	</update>

	<update id="updateMobileSynch2" parameterType="map">
		UPDATE schedule
		SET
		sync_mobile_2 = #{sync_mobile}
		WHERE id = #{id};
	</update>

	<update id="updateMobileSynch3" parameterType="map">
		UPDATE schedule
		SET
		sync_mobile_3 = #{sync_mobile}
		WHERE id = #{id};
	</update>

	<update id="updateMobileSynch4" parameterType="map">
		UPDATE schedule
		SET
		sync_mobile_4 = #{sync_mobile}
		WHERE id = #{id};
	</update>

	<!-- UPDATE EXCEPTION BREAK_EX -->
	<update id="updateBreakEx" parameterType="map">
		UPDATE schedule
		SET
		break_ex = #{break_ex}
		WHERE id = #{id};
	</update>


	<select id="loadDetailInitialScheduleForMobileByIdScheduleAndNoShift"
		parameterType="map" resultType="org.uario.seaworkengine.model.DetailInitialSchedule">
		SELECT d.id, d.id_schedule,
		d.shift,
		d.task, d.time, d.time_from, d.time_to,
		d.time_vacation,d.continueshift,
		ut.code as
		task_mobile_desc
		FROM
		detailinitialschedule d, usertask ut
		WHERE
		id_schedule =
		#{id_schedule} and d.shift = #{no_shift}
		and d.task =
		ut.id and ut.hiddentask=false and ((ut.isabsence=false and
		ut.justificatory = false) or (ut.endoperation=true or ut.overflow=true
		or ut.changeshift=true) );
	</select>



	<!-- LOAD THE FINAL INFO IN INITIAL STRUCTURE -->
	<select id="loadDetailFinalScheduleForMobileByIdScheduleAndNoShift"
		parameterType="map" resultType="org.uario.seaworkengine.model.DetailInitialSchedule">
		SELECT d.id, d.id_schedule,
		d.shift,
		d.task,
		d.time, d.time_from, d.time_to,
		d.time_vacation,d.continueshift,
		ut.code as
		task_mobile_desc,
		d.id_ship as field_mobile_id_ship,
		d.board as
		field_mobile_board,
		s.name as field_mobile_nameShip,
		d.crane as
		field_mobile_crane
		FROM
		usertask ut,
		detailfinalschedule d LEFT JOIN ship
		s ON d.id_ship = s.id
		WHERE
		id_schedule = #{id_schedule} and d.shift = #{no_shift} and d.task =
		ut.id and ut.hiddentask=false and ((ut.isabsence=false and
		ut.justificatory = false) or (ut.endoperation=true or ut.overflow=true
		or ut.changeshift=true) );
	</select>

	<insert id="createBadge">
		INSERT INTO
		badge (eventTime, eventType, idschedule)
		VALUES (#{eventTime}, #{eventType}, #{idschedule});
	</insert>

	<select id="loadBadgeByScheduleId" parameterType="Integer"
		resultType="org.uario.seaworkengine.web.services.handler.Badge">
		SELECT id, eventTime, eventType, idschedule
		FROM badge
		WHERE
		idschedule = #{id_schedule};
	</select>

	<delete id="deleteBadge" parameterType="Integer">
		DELETE
		FROM
		badge
		WHERE
		id
		=#{id_badge};
	</delete>

</mapper>	
	

	
	
	
