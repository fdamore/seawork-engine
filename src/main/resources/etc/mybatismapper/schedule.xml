<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="schedule">

	<cache />


	<select id="loadScheduleByDate" parameterType="map"
		resultType="org.uario.seaworkengine.model.Schedule">
		SELECT id, date_schedule, user, note, editor, controller,
		shift
		FROM schedule
		WHERE date_schedule = #{dt_arg};
	</select>

	<select id="loadScheduleById" parameterType="Integer"
		resultType="org.uario.seaworkengine.model.Schedule">
		SELECT id, date_schedule, user, note, editor, controller,
		shift
		FROM schedule
		WHERE id = #{id};
	</select>


	<select id="selectSchedulersForPreprocessing" resultType="org.uario.seaworkengine.model.Schedule"
		parameterType="map">

		select s.id,
		u.id as user,
		s.shift,
		s.date_schedule,
		concat(u.lastname, '
		', u.firstname) AS name_user
		from
		user u left join
		schedule s ON (u.id =
		s.user and s.date_schedule <![CDATA[>=]]>
		#{date_from} and
		s.date_schedule <![CDATA[<]]>
		#{date_to})
		where u.status <![CDATA[<>]]>
		'LICENZIATO' and u.status <![CDATA[<>]]>
		'SOSPESO' and u.out_schedule = 0

		<if test="my_full_text_search != null">
			and (u.firstname like CONCAT('%', #{my_full_text_search},
			'%') or
			u.lastname
			like
			CONCAT('%', #{my_full_text_search},'%') or
			u.employee_identification = #{my_full_text_search})
		</if>

		order by u.lastname asc

	</select>


	<insert id="createSchedule" parameterType="org.uario.seaworkengine.model.Schedule">
		INSERT INTO
		schedule
		(date_schedule, user, editor, controller, note,shift)
		VALUES
		(#{date_schedule}, #{user}, #{editor}, #{controller},
		#{note},
		#{shift});
	</insert>



	<update id="updateSchedule" parameterType="org.uario.seaworkengine.model.Schedule">
		UPDATE schedule
		SET
		id =
		#{id},
		date_schedule = #{date_schedule},
		user = #{user},
		editor =
		#{editor},
		controller = #{controller},
		note = #{note},
		shift = #{shift}
		WHERE id = #{id};
	</update>






	<select id="getLastShiftProgram" parameterType="map" resultType="int">
		select max(dfs.shift)
		from detailinitialschedule dfs, schedule s
		where
		s.user = #{id_user} and
		s.id = dfs.id_schedule and s.date_schedule =
		#{date_schedule}
	</select>

	<select id="getLastShiftRevision" parameterType="map"
		resultType="int">
		select
		max(dfs.shift)
		from detailfinalschedule dfs, schedule
		s
		where s.user = #{id_user} and s.id = dfs.id_schedule and
		s.date_schedule = #{date_schedule}
	</select>

	<select id="selectScheduleByDateAndUser" resultType="org.uario.seaworkengine.model.Schedule"
		parameterType="map">
		SELECT id, date_schedule, user, editor, controller,
		shift,
		note
		FROM schedule
		WHERE user = #{id_user} and
		date_schedule =
		#{date_schedule};
	</select>

	<delete id="removeScheduleByDateAndUser" parameterType="map">
		DELETE
		FROM
		schedule
		WHERE
		user = #{id_user} and
		date_schedule =
		#{date_schedule};
	</delete>



	<select id="selectAggregateScheduleProgram" resultType="org.uario.seaworkengine.model.Schedule"
		parameterType="map">

		select
		s.id,
		s.shift,
		ds.shift as no_shift,
		sum(ds.time) as program_time,
		s.date_schedule,
		s.note,
		s.editor,
		s.controller,
		u.id as
		user,
		concat(u.lastname, ' ', u.firstname) AS name_user
		from
		user u,
		schedule s
		left join
		detailinitialschedule ds ON (s.id = ds.id_schedule)
		where
		u.id
		= s.user
		and s.date_schedule >= #{date_from} and
		s.date_schedule <![CDATA[<]]>
		#{date_to} and u.status <![CDATA[<>]]>
		'LICENZIATO' and u.status <![CDATA[<>]]>
		'SOSPESO' and u.out_schedule = 0

		<if test="my_full_text_search != null">
			and (u.firstname like CONCAT('%',
			#{my_full_text_search},'%') or
			u.lastname
			like
			CONCAT('%',
			#{my_full_text_search}, '%') or
			u.employee_identification =
			#{my_full_text_search})
		</if>

		group by user , s.id , no_shift
		order by user, s.date_schedule asc

	</select>

	<select id="selectAggregateScheduleRevision" resultType="org.uario.seaworkengine.model.Schedule"
		parameterType="map">

		select
		s.id,
		s.shift,
		ds.shift as no_shift,
		sum(ds.time) as revision_time,
		s.date_schedule,
		s.note,
		s.editor,
		s.controller,
		u.id as user,
		concat(u.lastname, ' ', u.firstname) AS name_user
		from
		user u,
		schedule s
		left join
		detailfinalschedule ds ON (s.id = ds.id_schedule)
		where
		u.id =
		s.user
		and s.date_schedule >= #{date_from} and s.date_schedule  <![CDATA[<]]>
		#{date_to}
		and u.status <![CDATA[<>]]>
		'LICENZIATO' and u.status  <![CDATA[<>]]>
		'SOSPESO' and u.out_schedule = 0

		<if test="my_full_text_search != null">
			and (u.firstname like CONCAT('%',
			#{my_full_text_search},'%') or
			u.lastname
			like
			CONCAT('%',
			#{my_full_text_search},'%') or
			u.employee_identification =
			#{my_full_text_search})
		</if>

		group by user , s.id , no_shift
		order by user, s.date_schedule
		asc

	</select>

	<select id="selectAggregateScheduleByDateProgram" resultType="org.uario.seaworkengine.model.Schedule"
		parameterType="map">

		select
		s.id,
		s.shift,
		ds.shift as no_shift,
		sum(ds.time) as program_time,
		s.date_schedule,
		s.note,
		s.editor,
		s.controller,
		u.id as user,
		concat(u.lastname, ' ', u.firstname) AS name_user
		from
		user u,
		schedule s
		left join
		detailinitialschedule ds ON (s.id = ds.id_schedule)
		where
		u.id
		= s.user
		and s.date_schedule = #{date_from} and u.status <![CDATA[<>]]>
		'LICENZIATO' and u.status <![CDATA[<>]]>
		'SOSPESO' and u.out_schedule = 0

		<if test="my_full_text_search != null">
			and (u.firstname like CONCAT('%', #{my_full_text_search},
			'%') or
			u.lastname
			like
			CONCAT('%', #{my_full_text_search}, '%') or
			u.employee_identification = #{my_full_text_search})
		</if>


		group by user , s.id , no_shift
		order by user, s.date_schedule asc

	</select>

	<select id="selectAggregateScheduleByDateRevision" resultType="org.uario.seaworkengine.model.Schedule"
		parameterType="map">

		select
		s.id,
		s.shift,
		ds.shift as no_shift,
		sum(ds.time) as revision_time,
		s.date_schedule,
		s.note,
		s.editor,
		s.controller,
		u.id as user,
		concat(u.lastname, ' ', u.firstname) AS name_user
		from
		user u,
		schedule s
		left join
		detailfinalschedule ds ON (s.id = ds.id_schedule)
		where
		u.id =
		s.user
		and s.date_schedule = #{date_from} and u.status <![CDATA[<>]]>
		'LICENZIATO' and u.status <![CDATA[<>]]>
		'SOSPESO' and u.out_schedule = 0

		<if test="my_full_text_search != null">
			and (u.firstname like CONCAT('%',
			#{my_full_text_search},'%') or
			u.lastname
			like
			CONCAT('%',
			#{my_full_text_search}, '%') or
			u.employee_identification =
			#{my_full_text_search})
		</if>


		group by user , s.id , no_shift
		order by user, s.date_schedule asc

	</select>









	<insert id="createDetailInitialSchedule" parameterType="org.uario.seaworkengine.model.DetailInitialSchedule">
		INSERT
		INTO
		detailinitialschedule (id_schedule, shift, task,
		time)
		VALUES
		(#{id_schedule}, #{shift},
		#{task}, #{time});
	</insert>

	<insert id="createDetailFinalSchedule" parameterType="org.uario.seaworkengine.model.DetailFinalSchedule">
		INSERT INTO
		detailfinalschedule (id_schedule, shift, task, time, time_from,
		time_to)
		VALUES
		(#{id_schedule},#{shift},#{task},#{time},#{time_from},#{time_to});
	</insert>



	<select id="loadDetailInitialScheduleByIdScheduleAndShift"
		resultType="org.uario.seaworkengine.model.DetailInitialSchedule"
		parameterType="map">
		SELECT id, id_schedule, shift, task, time
		FROM
		detailinitialschedule
		WHERE id_schedule =
		#{id_schedule} and shift =
		#{shift};
	</select>

	<select id="loadDetailFinalScheduleByIdScheduleAndShift"
		resultType="org.uario.seaworkengine.model.DetailFinalSchedule"
		parameterType="map">
		SELECT id, id_schedule, shift, task, time, time_from,
		time_to
		FROM detailfinalschedule
		WHERE id_schedule =
		#{id_schedule} and
		shift = #{shift};
	</select>

	<select id="loadDetailInitialScheduleByIdSchedule"
		parameterType="Integer" resultType="org.uario.seaworkengine.model.DetailInitialSchedule">
		SELECT id, id_schedule, shift,
		task, time
		FROM detailinitialschedule
		WHERE id_schedule =
		#{id_schedule}
	</select>

	<select id="loadDetailFinalScheduleByIdSchedule" parameterType="Integer"
		resultType="org.uario.seaworkengine.model.DetailFinalSchedule">
		SELECT id, id_schedule, shift, task, time, time_from,
		time_to
		FROM detailfinalschedule
		WHERE id_schedule =
		#{id_schedule};
	</select>


	<delete id="removeAllDetailInitialScheduleByScheduleAndShift"
		parameterType="map">
		DELETE FROM
		detailinitialschedule
		WHERE id_schedule =
		#{id_schedule} and shift
		= #{shift};
	</delete>

	<delete id="removeAllDetailFinalScheduleByScheduleAndShift"
		parameterType="map">
		DELETE FROM
		detailfinalschedule
		WHERE id_schedule =
		#{id_schedule} and shift
		= #{shift};
	</delete>


	<delete id="removeAllDetailInitialScheduleBySchedule"
		parameterType="map">
		DELETE FROM
		detailinitialschedule
		WHERE id_schedule =
		#{id_schedule};
	</delete>

	<delete id="removeAllDetailFinalScheduleBySchedule"
		parameterType="map">
		DELETE FROM
		detailfinalschedule
		WHERE id_schedule =
		#{id_schedule};
	</delete>

	<delete id="removeScheduleUserSuspended" parameterType="map">
		<![CDATA[
		DELETE FROM
		schedule
		WHERE user=#{idUser} and date_schedule>=#{initialDate} and #{finalDate}>=date_schedule;
		]]>
	</delete>


	<delete id="removeScheduleUserFired" parameterType="map">
		<![CDATA[
		DELETE FROM
		schedule
		WHERE user=#{idUser} and date_schedule>=#{firedDate};
		]]>
	</delete>








</mapper>	
	

	
	
	