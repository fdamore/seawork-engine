<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="scheduleship">

	<cache-ref namespace="schedule" />



	<!-- BEGIN MEN WORK MAP -->

	<resultMap id="menWork"
		type="org.uario.seaworkengine.statistics.MenNeedToShift">
		<id property="shift" column="shift" />
		<result property="menwork" column="menwork" />
	</resultMap>

	<!-- END MEN WORK MAP -->

	<insert id="createScheduleShip"
		parameterType="org.uario.seaworkengine.model.ScheduleShip">
		INSERT INTO
		scheduleship (idship,idship_activity, volume,
		note, arrivaldate,
		departuredate,
		rif_mct, customer_id, id_service)
		VALUES
		(#{idship},#{idship_activity}, #{volume}, #{note},
		#{arrivaldate},
		#{departuredate}, #{rif_mct}, #{customer_id},
		#{id_service});
	</insert>

	<delete id="deleteScheduleShip" parameterType="Integer">
		delete from
		scheduleship
		where
		id = #{id_scheduleShip}
	</delete>

	<select id="loadScheduleShip" parameterType="Integer"
		resultType="org.uario.seaworkengine.model.ScheduleShip">
		<![CDATA[
SELECT 
    s.id,
    s.idship,
    s.volume,
    s.note,
    s.arrivaldate,
    s.departuredate,
    s.rif_mct,
    sh.name,
    s.customer_id,
    s.idship_activity,
    s.id_service,
    (SELECT 
            sr.name
        FROM
            service sr
        WHERE
            s.id_service = sr.id) AS serviceName
FROM
    scheduleship s,
    ship sh
WHERE
    s.idship = sh.id AND s.id = #{id_scheduleShip}		
		]]>
	</select>



	<select id="searchScheduleShip"
		resultType="org.uario.seaworkengine.model.ScheduleShip">
		SELECT s.id,
		s.idship, s.volume, s.note, s.arrivaldate,
		s.departuredate,
		sh.name,
		s.rif_mct, s.customer_id, s.idship_activity,
		s.id_service,
		(SELECT sr.name
		FROM service sr
		WHERE s.id_service=sr.id
		)
		as serviceName
		FROM
		scheduleship s left join customer c ON
		(s.customer_id = c.id), ship sh
		where
		s.idship = sh.id

		<if test="datefrom!=null and dateto!=null">

		<![CDATA[ 
		AND (s.arrivaldate <= #{dateto} and s.departuredate >= #{datefrom}) 			
			]]>

			<if test="intial_support!=null and intial_support == true">
			
			<![CDATA[ 
		AND (s.arrivaldate >= #{datefrom}) 			
			]]>

			</if>

		</if>

		<if test="datefrom !=null and dateto == null">
			<![CDATA[ and s.arrivaldate = #{datefrom} ]]>
		</if>

		<if test="datefrom == null and dateto != null">
			<![CDATA[ and s.departuredate = #{dateto} ]]>
		</if>

		<if test="sws!=null">
			and #{sws} = s.id
		</if>

		<if test="textSearch!=null">
			and sh.name like CONCAT('%',#{textSearch},'%')
		</if>

		<if test="shipType!=null">
			and sh.shiptype like CONCAT('%',#{shipType},'%')
		</if>

		<if test="shipLine!=null">
			and sh.line like CONCAT('%',#{shipLine},'%')
		</if>

		<if test="shipCondition!=null">
			and sh.shipcondition like CONCAT('%',#{shipCondition},'%')
		</if>


		<if test="mct != null">

			<if test="mct == 'RIF_MCT_EMPTY'">
				and (s.rif_mct is null || length(s.rif_mct) = 0)
			</if>

			<if test="mct != 'RIF_MCT_EMPTY'">
				and s.rif_mct = #{mct}
			</if>
		</if>



		<if test="idCustomer!=null">
			and #{idCustomer} = c.id
		</if>

		<if test="idService!=null">
			<if test="idService == -666">
				and s.id_service is null
			</if>

			<if test="idService != -666">
				and s.id_service = #{idService}
			</if>
		</if>
		order by
		s.arrivaldate
		DESC;
	</select>





	<update id="updateScheduleShip"
		parameterType="org.uario.seaworkengine.model.ScheduleShip">
		UPDATE
		scheduleship
		SET
		idship = #{idship},
		volume =
		#{volume},
		note = #{note},
		arrivaldate =
		#{arrivaldate},
		departuredate =
		#{departuredate},
		rif_mct =
		#{rif_mct},
		customer_id = #{customer_id},
		idship_activity =
		#{idship_activity},
		id_service = #{id_service}
		WHERE id
		= #{id};
	</update>

	<update id="updateRifMCT" parameterType="map">
		UPDATE
		scheduleship
		SET
		rif_mct = #{rif_mct}
		WHERE id = #{id};
	</update>

	<insert id="createDetailScheduleShip"
		parameterType="org.uario.seaworkengine.model.DetailScheduleShip">
		INSERT INTO
		detailscheduleship
		(idscheduleship, shift,
		operation, iduser,
		idseconduser, handswork, menwork, handswork_program,
		menwork_program,
		shiftdate, notedetail,
		activity_start, activity_end,
		rain, wind, sky,
		temperature, first_down, last_down,
		worked,person_down,
		person_onboard,windyday)
		VALUES
		(#{idscheduleship},
		#{shift},#{operation},#{iduser},#{idseconduser},#{handswork},#{menwork},
		#{handswork_program}, #{menwork_program}, #{shiftdate},
		#{notedetail},
		#{activity_start}, #{activity_end}, #{rain}, #{wind}, #{sky},
		#{temperature}, #{first_down}, #{last_down},#{worked}, #{person_down},
		#{person_onboard},#{windyday});
	</insert>

	<delete id="deleteDetailScheduleShip" parameterType="Integer">
		delete from
		detailscheduleship
		where
		id = #{id_detailScheduleShip}
	</delete>



	<select id="searchDetailScheduleShipByPeriodOrDateshift"
		parameterType="map"
		resultType="org.uario.seaworkengine.model.DetailScheduleShip">
<![CDATA[
SELECT 
    d.shift,
    d.id,
    d.notedetail,
    d.idscheduleship,
    ss.customer_id,
    d.notedetail,
    d.rain,
    d.wind,
    d.windyday,
    d.sky,
    d.temperature,
    d.first_down,
    d.worked,
    d.last_down,
    s.name,
    d.operation,
    d.activity_start,
    d.activity_end,
    ss.note,
    ss.arrivaldate,
    ss.rif_mct AS rif_mct,
    ss.departuredate,
    ss.id_service AS serviceId,
    d.iduser,
    d.idseconduser,
    d.handswork,
    d.menwork,
    d.handswork_program,
    d.menwork_program,
    d.person_down,
    d.person_onboard,
    d.shiftdate,
    s.id AS id_ship,
    CONCAT(u.lastname, ' ', u.firstname) AS firstOperativeName,
    CONCAT(us.lastname, ' ', us.firstname) AS secondOperativeName,
    (SELECT 
            sr.name
        FROM
            service sr
        WHERE
            ss.id_service = sr.id) AS serviceType
FROM
    detailscheduleship d
        LEFT JOIN
    user u ON (d.iduser = u.id),
    detailscheduleship d1
        LEFT JOIN
    user us ON (d1.idseconduser = us.id),
    ship s,
    scheduleship ss
WHERE
    d.idscheduleship = ss.id
        AND ss.idship = s.id
        AND d1.id = d.id
]]>
		<if test="full_text_search != null">
			and (s.name like CONCAT('%',#{full_text_search}, '%') )
		</if>

		<if test="shipType!=null">
			and s.shiptype like CONCAT('%',#{shipType},'%')
		</if>

		<if test="operation_type!=null">
			and d.operation like CONCAT('%',#{operation_type},'%')
		</if>

		<if test="shipLine!=null">
			and s.line like CONCAT('%',#{shipLine},'%')
		</if>

		<if test="shipCondition!=null">
			and s.shipcondition like CONCAT('%',#{shipCondition},'%')
		</if>


		<if test="serviceId != null">
			<if test="serviceId == -666">
				and ss.id_service is null
			</if>

			<if test="serviceId != -666">
				and ss.id_service = #{serviceId}
			</if>
		</if>




		<if test="shift != null">
			and d.shift = #{shift}
		</if>

		<if test="dateshift != null">
			and d.shiftdate = #{dateshift}
		</if>

		<if test="datefrom !=null and dateto !=null and dateshift == null">

			<if
				test="period_on_dateshift != null and period_on_dateshift == true">			
			<![CDATA[ 
		AND (d.shiftdate <= #{dateto} and d.shiftdate >= #{datefrom}) 			
			]]>
			</if>

			<if
				test="period_on_dateshift == null or period_on_dateshift == false">			
			<![CDATA[ 
		AND (ss.arrivaldate <= #{dateto} and ss.departuredate >= #{datefrom}) 			
			]]>
			</if>


		</if>

		<if test="datefrom !=null and dateto == null and dateshift == null">

			<if
				test="period_on_dateshift != null and period_on_dateshift == true">			
			<![CDATA[ 
		and (d.shiftdate = #{datefrom}) 			
			]]>
			</if>

			<if
				test="period_on_dateshift == null or period_on_dateshift == false">			
			<![CDATA[ and ss.arrivaldate = #{datefrom} ]]>
			</if>

		</if>

		<if
			test="datefrom == null and dateto != null and dateshift == null">

			<if
				test="period_on_dateshift != null and period_on_dateshift == true">			
			<![CDATA[ 
		and (d.shiftdate = #{dateto}) 			
			]]>
			</if>

			<if
				test="period_on_dateshift == null or period_on_dateshift == false">
			<![CDATA[ and ss.departuredate = #{dateto} ]]>
			</if>
		</if>

		<if test="idCustomer != null">
			and #{idCustomer}=ss.customer_id
		</if>

		<if test="nowork != null">
			and #{nowork}=s.nowork
		</if>

		<if test="activityh != null">
			and #{activityh}=s.activityh
		</if>

		<if test="worked != null">
			and #{worked}=d.worked
		</if>

		<if test="no_invoice != null and no_invoice == true">
		<![CDATA[
		AND d.id NOT IN (SELECT 
            df_1.iddetailscheduleship
        FROM
            detailfinalscheduleship df_1
        WHERE
            df_1.invoicing_cycle IS NOT NULL)
            ]]>
		</if>

		<if test="invoice_period != null">
		<![CDATA[
		AND exists (SELECT 
            *
        FROM
            detailfinalscheduleship df_2
        WHERE
            df_2.invoicing_cycle = #{invoice_period} and df_2.iddetailscheduleship = d.id)
            ]]>
		</if>


		order by
		d.shiftdate, d.shift, s.name asc

	</select>

	<select id="searchDetailScheduleShipRif_MCT_SWS"
		parameterType="map"
		resultType="org.uario.seaworkengine.model.DetailScheduleShip">
<![CDATA[		
SELECT 
    d.shift,
    d.id,    
    d.idscheduleship,
    ss.customer_id,
    d.notedetail,
    d.rain,
    d.wind,
    d.windyday,
    d.sky,
    d.temperature,
    d.first_down,
    d.worked,
    d.last_down,
    s.name,
    d.operation,
    d.activity_start,
    d.activity_end,
    ss.note,
    ss.arrivaldate,
    ss.rif_mct AS rif_mct,
    ss.id_service AS serviceId,
    ss.departuredate,
    d.iduser,
    d.idseconduser,
    d.handswork,
    d.menwork,
    d.handswork_program,
    d.menwork_program,
    d.person_down,
    d.person_onboard,
    d.shiftdate,
    s.id AS id_ship,
    CONCAT(u.lastname, ' ', u.firstname) AS firstOperativeName,
    CONCAT(us.lastname, ' ', us.firstname) AS secondOperativeName,
    (SELECT 
            sr.name
        FROM
            service sr
        WHERE
            ss.id_service = sr.id) AS serviceType
FROM
    detailscheduleship d
        LEFT JOIN
    user u ON (d.iduser = u.id),
    detailscheduleship d1
        LEFT JOIN
    user us ON (d1.idseconduser = us.id),
    ship s,
    scheduleship ss
WHERE
]]>
		<if test="rif_mct != null">

			<if test="rif_mct == 'RIF_MCT_EMPTY'">
				(ss.rif_mct is null || length(ss.rif_mct) = 0) and
			</if>

			<if test="rif_mct != 'RIF_MCT_EMPTY'">
				ss.rif_mct = #{rif_mct} and
			</if>
		</if>

		<if test="rif_sws != null">
			d.idscheduleship=#{rif_sws} and
		</if>

<![CDATA[
    d.idscheduleship = ss.id
        AND ss.idship = s.id
        AND d1.id = d.id
ORDER BY d.shiftdate , d.shift , s.name ASC;
]]>




	</select>

	<select id="searchDetailScheduleShip" parameterType="map"
		resultType="org.uario.seaworkengine.model.DetailScheduleShip">
<![CDATA[		
SELECT 
    d.shift,
    d.id,    
    d.idscheduleship,
    ss.customer_id,
    d.notedetail,
    d.rain,
    d.wind,
    d.windyday,
    d.sky,
    d.temperature,
    d.first_down,
    d.worked,
    d.last_down,
    s.name,
    d.operation,
    d.activity_start,
    d.activity_end,
    ss.note,
    ss.arrivaldate,
    ss.rif_mct AS rif_mct,
    ss.departuredate,
    d.iduser,
    d.idseconduser,
    d.handswork,
    d.menwork,
    d.handswork_program,
    d.menwork_program,
    d.person_down,
    d.person_onboard,
    d.shiftdate,
    s.id AS id_ship,
    CONCAT(u.lastname, ' ', u.firstname) AS firstOperativeName,
    CONCAT(us.lastname, ' ', us.firstname) AS secondOperativeName,
    (SELECT 
            sr.name
        FROM
            service sr
        WHERE
            ss.id_service = sr.id) AS serviceType
FROM
    detailscheduleship d
        LEFT JOIN
    user u ON (d.iduser = u.id),
    detailscheduleship d1
        LEFT JOIN
    user us ON (d1.idseconduser = us.id),
    ship s,
    scheduleship ss
WHERE
]]>
		<if test="full_text_search != null">
			(s.name like CONCAT('%',#{full_text_search},
			'%') ) and
		</if>

		<if test="serviceId!=null">
			ss.id_service = #{serviceId} and
		</if>

		<if test="shift != null">
			d.shift = #{shift} and
		</if>

		<if test="shiftdate != null">
			d.shiftdate=#{shiftdate} and
		</if>

		<if test="idCustomer != null">
			#{idCustomer}=ss.customer_id and
		</if>

		<if test="nowork != null">
			#{nowork}=s.nowork and
		</if>

		<if test="activityh != null">
			#{activityh}=s.activityh and
		</if>

		<if test="worked != null">
			#{worked}=d.worked and
		</if>

<![CDATA[
    d.idscheduleship = ss.id
        AND ss.idship = s.id
        AND d1.id = d.id
ORDER BY d.shiftdate , d.shift , s.name ASC;
	]]>


	</select>


	<select id="loadDetailScheduleShipNote" parameterType="Integer"
		resultType="string">
<![CDATA[
SELECT   
    d.notedetail
FROM
    detailscheduleship d        
WHERE
    d.id = #{id}
]]>
	</select>



	<select id="loadDetailScheduleShipByIdSchedule"
		parameterType="Integer"
		resultType="org.uario.seaworkengine.model.DetailScheduleShip">
<![CDATA[

SELECT 
    s.idship AS id_ship,
    d.id,
    d.idscheduleship,
    d.shift,
    d.operation,
    d.iduser,
    d.idseconduser,
    d.handswork,
    d.menwork,
    d.handswork_program,
    d.menwork_program,
    d.shiftdate,
    d.notedetail,
    d.activity_start,
    d.activity_end,
    d.rain,
    d.wind,
    d.windyday,
    d.sky,
    d.temperature,
    d.worked,
    d.first_down,
    d.last_down,
    d.person_down,
    d.person_onboard,
    CONCAT(u.lastname, ' ', u.firstname) AS firstOperativeName,
    CONCAT(us.lastname, ' ', us.firstname) AS secondOperativeName
FROM
    detailscheduleship d
        LEFT JOIN
    user u ON (d.iduser = u.id),
    detailscheduleship d1
        LEFT JOIN
    user us ON (d1.idseconduser = us.id),
    scheduleship s
WHERE
    d.idscheduleship = #{id_scheduleShip} AND d1.id = d.id
        AND s.id = d.idscheduleship
ORDER BY d.shiftdate , d.shift ASC;

]]>
	</select>

	<select id="loadScheduleShipByIdShipAndArrivalDate"
		parameterType="map"
		resultType="org.uario.seaworkengine.model.ScheduleShip">
<![CDATA[
SELECT 
    s.id,
    s.idship,
    s.volume,
    s.note,
    s.arrivaldate,
    s.departuredate,
    s.rif_mct,
    s.customer_id,
    s.idship_activity,
    s.id_service,
    (SELECT 
            sr.name
        FROM
            service sr
        WHERE
            s.id_service = sr.id) AS serviceName
FROM
    scheduleship s
WHERE
    s.idship = #{idship}
    AND DATE(#{arrivaldate}) >= DATE(s.arrivalDate)
    AND DATE(s.departureDate) >= DATE(#{arrivaldate});
        
        
       ]]>
	</select>


	<select id="loadShipInDate" parameterType="map"
		resultType="org.uario.seaworkengine.model.Ship">
<![CDATA[		
SELECT 
    sh.id,
    sh.name,
    sh.line,
    sh.shiptype,
    sh.shipcondition,
    sh.twtype,
    s.id AS rifSWS,
    sh.nowork,
    sh.activityh,
    s.id_service,
    (SELECT 
            sr.name
        FROM
            service sr
        WHERE
            s.id_service = sr.id) AS serviceName
FROM
    scheduleship s,
    ship sh
WHERE
    sh.id = s.idship
        AND DATE(#{shipDate}) >= DATE(s.arrivalDate)
        AND DATE(s.departureDate) >= DATE(#{shipDate});
]]>
	</select>





	<update id="updateDetailScheduleShipNote" parameterType="map">
		UPDATE
		detailscheduleship SET
		notedetail = #{note}
		WHERE id = #{id};
	</update>

	<update id="updateDetailScheduleShip"
		parameterType="org.uario.seaworkengine.model.DetailScheduleShip">
		UPDATE
		detailscheduleship SET
		idscheduleship =
		#{idscheduleship},
		shift =
		#{shift},
		operation = #{operation},
		iduser =
		#{iduser},
		idseconduser =
		#{idseconduser},
		handswork = #{handswork},
		menwork = #{menwork},
		handswork_program = #{handswork_program},
		menwork_program =
		#{menwork_program},
		shiftdate = #{shiftdate},
		notedetail =
		#{notedetail},
		activity_start =
		#{activity_start},
		activity_end =
		#{activity_end},
		rain = #{rain},
		wind = #{wind},
		sky =
		#{sky},
		temperature = #{temperature},
		first_down = #{first_down},
		last_down =
		#{last_down},
		worked = #{worked},
		person_down =
		#{person_down},
		person_onboard = #{person_onboard},
		windyday =
		#{windyday}
		WHERE id =
		#{id};
	</update>


	<update id="updateDetailScheduleShipForMobile"
		parameterType="map">
		<![CDATA[
		UPDATE detailscheduleship 
			SET handswork = #{handswork}, 
			menwork = #{menwork},
			worked = #{worked},
			sky = #{sky},
			temperature = #{temperature},
			rain = #{rain},
			wind = #{wind},
			windyday = #{windyday},
			person_onboard = #{person_onboard},
			first_down = #{firstdown},
			last_down = #{lastdown},
			person_down = #{persondown}						
		WHERE id = #{id}
		]]>
	</update>


	<insert id="createDetailFinalScheduleShip"
		parameterType="org.uario.seaworkengine.model.DetailFinalScheduleShip">
		INSERT INTO
		detailfinalscheduleship (crane_gtw,
		volume,
		timework, iddetailscheduleship, notedetail,
		volumeunderboard,volumeunderboard_sws,
		volume_tw_mct,invoicing_cycle,
		activity_start, activity_end, menwork_activityh,
		id_crane,franchise_volume,
		franchise_volumeunderboard,
		franchise_volumeunderboard_sws, franchise_volume_tw_mct,
		franchise_timework, p_crane,mobile_user)
		VALUES
		(#{crane_gtw},
		#{volume},
		#{timework},
		#{iddetailscheduleship}, #{notedetail},
		#{volumeunderboard},
		#{volumeunderboard_sws},#{volume_tw_mct},#{invoicing_cycle},
		#{activity_start}, #{activity_end}, #{menwork_activityh},
		#{id_crane},#{franchise_volume},
		#{franchise_volumeunderboard},
		#{franchise_volumeunderboard_sws}, #{franchise_volume_tw_mct},
		#{franchise_timework},#{p_crane},#{mobile_user});
	</insert>

	<delete id="deleteDetailFinalScheduleShipById"
		parameterType="Integer">
		delete from
		detailfinalscheduleship
		where
		id = #{id}
	</delete>



	<update id="updateDetailFinalScheduleShip"
		parameterType="org.uario.seaworkengine.model.DetailFinalScheduleShip">
		UPDATE detailfinalscheduleship
		SET
		id = #{id},
		crane_gtw =
		#{crane_gtw},
		timework = #{timework},
		volume =
		#{volume},
		iddetailscheduleship =
		#{iddetailscheduleship},
		notedetail =
		#{notedetail},
		volumeunderboard = #{volumeunderboard},
		volumeunderboard_sws = #{volumeunderboard_sws},
		volume_tw_mct =
		#{volume_tw_mct},
		invoicing_cycle = #{invoicing_cycle},
		activity_start =
		#{activity_start},
		activity_end = #{activity_end},
		menwork_activityh =
		#{menwork_activityh},
		id_crane = #{id_crane},
		franchise_volume =
		#{franchise_volume},
		franchise_volumeunderboard =
		#{franchise_volumeunderboard},
		franchise_volumeunderboard_sws =
		#{franchise_volumeunderboard_sws},
		franchise_volume_tw_mct =
		#{franchise_volume_tw_mct},
		franchise_timework = #{franchise_timework},
		p_crane = #{p_crane}
		WHERE id = #{id};
	</update>


	<select id="loadDetailFinalScheduleShipByIdDetailScheduleShip"
		resultType="org.uario.seaworkengine.model.DetailFinalScheduleShip"
		parameterType="Integer">
		<![CDATA[
SELECT 
    df.id,
    (SELECT 
            c.number
        FROM
            crane c
        WHERE
            df.id_crane = c.id) AS crane,
    df.crane_gtw,
    df.volume,
    df.timework,
    df.iddetailscheduleship,
    df.notedetail,
    df.volumeunderboard,
    df.volumeunderboard_sws,
    df.volume_tw_mct,
    s.rif_mct,
    s.id AS rif_sws,
    df.invoicing_cycle,
    df.activity_start,
    df.activity_end,
    df.menwork_activityh,
    df.id_crane,
    df.franchise_volume,
    df.franchise_volumeunderboard,
    df.franchise_volumeunderboard_sws,
    df.franchise_volume_tw_mct,
    df.franchise_timework,
    p_crane,
    df.mobile_user
FROM
    detailfinalscheduleship df,
    detailscheduleship d,
    scheduleship s
WHERE
    df.iddetailscheduleship = #{idDetailScheduleShip}
        AND df.iddetailscheduleship = d.id
        AND d.idscheduleship = s.id;
	]]>


	</select>


</mapper>