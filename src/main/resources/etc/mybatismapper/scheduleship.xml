<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="scheduleship">

	<cache-ref namespace="schedule" />



	<!-- BEGIN MEN WORK MAP -->

	<resultMap id="menWork"
		type="org.uario.seaworkengine.statistics.MenNeedToShift">
		<id property="shift" column="shift" />
		<result property="menwork" column="menwork" />
	</resultMap>

	<!-- END MEN WORK MAP -->

	<insert id="createScheduleShip" parameterType="org.uario.seaworkengine.model.ScheduleShip">
		INSERT INTO
		scheduleship (idship,idship_activity, volume, note, arrivaldate,
		departuredate,
		rif_mct, customer_id, id_service)
		VALUES
		(#{idship},#{idship_activity}, #{volume}, #{note},
		#{arrivaldate},
		#{departuredate}, #{rif_mct}, #{customer_id}, #{id_service});
	</insert>

	<delete id="deleteScheduleShip" parameterType="Integer">
		delete from
		scheduleship
		where
		id = #{id_scheduleShip}
	</delete>

	<select id="loadScheduleShip" parameterType="Integer"
		resultType="org.uario.seaworkengine.model.ScheduleShip">
		SELECT s.id, s.idship, s.volume, s.note, s.arrivaldate,
		s.departuredate, s.rif_mct, sh.name, s.customer_id, s.idship_activity, s.id_service, 
		(SELECT sr.name FROM service sr where s.id_service=sr.id) as serviceName  
		FROM
		scheduleship s,  
		ship sh
		where
		s.idship =
		sh.id and
		s.id =
		#{id_scheduleShip};
	</select>



	<select id="searchScheduleShip" resultType="org.uario.seaworkengine.model.ScheduleShip">
		SELECT s.id,
		s.idship, s.volume, s.note, s.arrivaldate,
		s.departuredate,
		sh.name,
		s.rif_mct, s.customer_id, s.idship_activity, s.id_service, 
			(SELECT sr.name 
			 FROM service sr 
			 WHERE s.id_service=sr.id 			 
			 ) as serviceName			  
		FROM
		scheduleship s left join customer c ON (s.customer_id = c.id), ship sh 				 
		where
		s.idship = sh.id 
		
		<if test="datefrom!=null">
			<if test="dateto!=null">
				and date(s.arrivaldate) >= date(#{datefrom}) and
				date(#{dateto}) >= date(s.arrivaldate)
			</if>
		</if>

		<if test="sws!=null">
			and #{sws} = s.id 
		</if>
		
		<if test="textSearch!=null">
			and sh.name like CONCAT('%',#{textSearch},'%') 
		</if>

		<if test="mct!=null">
			and #{mct} = s.rif_mct
		</if>
		
		<if test="idCustomer!=null">
			and #{idCustomer} = c.id 
		</if>
		
		<if test="idService!=null">
			and s.id_service = #{idService} 
		</if>
				
		order by
		s.arrivaldate
		DESC;
	</select>


	<select id="selectAllScheduleShipFulltextSearchLike"
		parameterType="String" resultType="org.uario.seaworkengine.model.ScheduleShip">
		SELECT s.id, s.idship, s.volume, s.note, s.arrivaldate,
		s.departuredate, s.rif_mct, sh.name, s.customer_id, s.idship_activity, s.id_service, (SELECT sr.name FROM service sr where s.id_service=sr.id) as serviceName 
		FROM
		scheduleship s,
		ship sh

		<if test="my_full_text_search != null">
			WHERE (sh.name like CONCAT('%',#{my_full_text_search},
			'%') and s.idship =
			sh.id)
		</if>

		order by s.arrivaldate DESC;
	</select>


	<update id="updateScheduleShip" parameterType="org.uario.seaworkengine.model.ScheduleShip">
		UPDATE
		scheduleship
		SET
		idship = #{idship},
		volume = #{volume},
		note = #{note},
		arrivaldate =
		#{arrivaldate},
		departuredate =
		#{departuredate},
		rif_mct =
		#{rif_mct},
		customer_id = #{customer_id},
		idship_activity = #{idship_activity}, 
		id_service = #{id_service} 
		WHERE id = #{id};
	</update>

	<update id="updateRifMCT" parameterType="map">
		UPDATE
		scheduleship
		SET
		rif_mct = #{rif_mct}
		WHERE id = #{id};
	</update>

	<insert id="createDetailScheduleShip" parameterType="org.uario.seaworkengine.model.DetailScheduleShip">
		INSERT INTO
		detailscheduleship
		(idscheduleship, shift, operation, iduser,
		idseconduser, handswork, menwork, handswork_program, menwork_program, shiftdate, notedetail,
		activity_start, activity_end, rain, wind, sky, temperature, first_down, last_down, worked,person_down, person_onboard)
		VALUES
		(#{idscheduleship},
		#{shift},#{operation},#{iduser},#{idseconduser},#{handswork},#{menwork}, #{handswork_program}, #{menwork_program}, #{shiftdate},
		#{notedetail}, #{activity_start}, #{activity_end}, #{rain}, #{wind}, #{sky}, #{temperature}, #{first_down}, #{last_down},#{worked}, #{person_down}, #{person_onboard});
	</insert>

	<delete id="deleteDetailScheduleShip" parameterType="Integer">
		delete from
		detailscheduleship
		where
		id = #{id_detailScheduleShip}
	</delete>

	<delete id="deteleDetailSchedueleShipByIdSchedule"
		parameterType="Integer">
		delete from
		detailscheduleship
		where
		idscheduleship =
		#{id_scheduleShip};
	</delete>

	
	






	<select id="searchDetailScheduleShipByPeriodOrDateshift" parameterType="map"
		resultType="org.uario.seaworkengine.model.DetailScheduleShip">
		SELECT
		d.shift, d.id, d.notedetail, d.idscheduleship, ss.customer_id,
		d.notedetail,  d.rain, d.wind, d.sky, d.temperature, d.first_down, d.worked, d.last_down, 
		s.name, d.operation, d.activity_start, d.activity_end,
		ss.note,ss.arrivaldate, ss.rif_mct as rif_mct, 
		ss.departuredate,
		d.iduser,d.idseconduser,
		d.handswork,
		d.menwork, d.handswork_program, d.menwork_program, d.person_down, d.person_onboard, 
		d.shiftdate,
		s.id as
		id_ship,
		concat(u.lastname, '
		', u.firstname) AS
		firstOperativeName,
		concat(us.lastname, ' ',
		us.firstname) AS 
		secondOperativeName, (SELECT sr.name FROM service sr where ss.id_service=sr.id) as serviceType 
		FROM
		detailscheduleship d
		left join
		user u ON
		(d.iduser = u.id),
		detailscheduleship d1
		left join
		user us ON
		(d1.idseconduser = us.id),
		ship s, scheduleship ss
		where d.idscheduleship = ss.id and ss.idship = s.id and d1.id = d.id 

		<if test="full_text_search != null">
			and (s.name like CONCAT('%',#{full_text_search}, '%') )
		</if>
		
		<if test="serviceId!=null">
			and ss.id_service = #{serviceId}
		</if>

		<if test="shift != null">
			and d.shift = #{shift}
		</if>
		
		<if test="dateshift != null">
			and d.shiftdate = #{dateshift} 
		</if>
		
		<if test="datefrom !=null and dateto !=null and dateshift == null">
			<![CDATA[ and ss.arrivaldate >= #{datefrom} and ss.arrivaldate <= date#{dateto} ]]>
		</if>
	
		<if test="idCustomer != null">
			and #{idCustomer}=ss.customer_id
		</if>

		<if test="nowork != null">
			and #{nowork}=s.nowork
		</if>

		<if test="activityh != null">
			and #{activityh}=s.activityh
		</if>
		
		<if test="worked != null">
			and #{worked}=d.worked 
		</if>	
		
		order by
		d.shiftdate, d.shift, s.name asc;

	</select>
	
	<select id="searchDetailScheduleShipRif_MCT_SWS" parameterType="map"
		resultType="org.uario.seaworkengine.model.DetailScheduleShip">
		SELECT
		d.shift, d.id, d.notedetail, d.idscheduleship, ss.customer_id,
		d.notedetail, d.rain, d.wind, d.sky, d.temperature, d.first_down, d.worked, d.last_down, 
		s.name, d.operation, d.activity_start, d.activity_end,
		ss.note,ss.arrivaldate, ss.rif_mct as rif_mct, 
		ss.departuredate,
		d.iduser,
		d.idseconduser,
		d.handswork,
		d.menwork, d.handswork_program, d.menwork_program, d.person_down, d.person_onboard, 
		d.shiftdate, s.id as
		id_ship,
		concat(u.lastname,
		' ', u.firstname) AS
		firstOperativeName,
		concat(us.lastname, ' ',
		us.firstname) AS
		secondOperativeName
		FROM
		detailscheduleship d
		left join
		user u ON
		(d.iduser = u.id),
		detailscheduleship d1
		left join
		user us ON
		(d1.idseconduser = us.id),
		ship s, scheduleship ss
		where

		<if test="rif_mct != null">
			ss.rif_mct = #{rif_mct} and
		</if>

		<if test="rif_sws != null">
			d.idscheduleship=#{rif_sws} and
		</if>
				
		d.idscheduleship = ss.id and ss.idship = s.id and d1.id = d.id
		order by
		d.shiftdate, d.shift, s.name asc;
		
	</select>

	<select id="searchDetailScheduleShip" parameterType="map"
		resultType="org.uario.seaworkengine.model.DetailScheduleShip">
		SELECT
		d.shift, d.id, d.notedetail, d.idscheduleship, ss.customer_id,
		d.notedetail, d.rain, d.wind, d.sky, d.temperature, d.first_down, d.worked, d.last_down, 
		s.name, d.operation, d.activity_start, d.activity_end,
		ss.note,ss.arrivaldate, ss.rif_mct as rif_mct, 
		ss.departuredate,
		d.iduser,
		d.idseconduser,
		d.handswork,
		d.menwork, d.handswork_program, d.menwork_program, d.person_down, d.person_onboard, 
		d.shiftdate, s.id as
		id_ship,
		concat(u.lastname,
		' ', u.firstname) AS
		firstOperativeName,
		concat(us.lastname, ' ',
		us.firstname) AS
		secondOperativeName, (SELECT sr.name FROM service sr where ss.id_service=sr.id) as serviceType
		FROM
		detailscheduleship d
		left join
		user u ON
		(d.iduser = u.id),
		detailscheduleship d1
		left join
		user us ON
		(d1.idseconduser = us.id),
		ship s, scheduleship ss
		where

		<if test="full_text_search != null">
			(s.name like CONCAT('%',#{full_text_search},
			'%') ) and
		</if>
		
		<if test="serviceId!=null">
			ss.id_service = #{serviceId} and 
		</if>

		<if test="shift != null">
			d.shift = #{shift} and
		</if>

		<if test="shiftdate != null">
			d.shiftdate=#{shiftdate} and
		</if>

		<if test="idCustomer != null">
			#{idCustomer}=ss.customer_id and
		</if>

		<if test="nowork != null">
			#{nowork}=s.nowork and
		</if>

		<if test="activityh != null">
			#{activityh}=s.activityh and
		</if>
		
		<if test="worked != null">
			#{worked}=d.worked and 
		</if>
		
		d.idscheduleship = ss.id and ss.idship = s.id and d1.id = d.id
		order by
		d.shiftdate, d.shift, s.name asc;
	</select>


	<select id="loadDetailScheduleShipByIdSchedule" parameterType="Integer"
		resultType="org.uario.seaworkengine.model.DetailScheduleShip">
		SELECT d.id, d.idscheduleship, d.shift,
		d.operation,
		d.iduser,
		d.idseconduser,
		d.handswork, d.menwork, d.handswork_program, d.menwork_program, 
		d.shiftdate,
		d.notedetail, d.activity_start, d.activity_end, d.rain, d.wind, d.sky, d.temperature, d.worked, d.first_down, d.last_down, d.person_down, d.person_onboard, 
		concat(u.lastname, '
		',
		u.firstname) AS
		firstOperativeName,
		concat(us.lastname, ' ',
		us.firstname) AS
		secondOperativeName
		FROM
		detailscheduleship
		d
		left join
		user u ON
		(d.iduser
		= u.id),
		detailscheduleship
		d1
		left join
		user us ON
		(d1.idseconduser =
		us.id)
		where
		d.idscheduleship =
		#{id_scheduleShip} and
		d1.id = d.id
		order
		by
		d.shiftdate , d.shift
		asc;
	</select>

	<select id="loadScheduleShipByIdShipAndArrivalDate"
		parameterType="map" resultType="org.uario.seaworkengine.model.ScheduleShip">
		SELECT s.id, s.idship, s.volume, s.note,
		s.arrivaldate, s.departuredate, s.rif_mct, s.customer_id, s.idship_activity, s.id_service, (SELECT sr.name FROM service sr where s.id_service=sr.id)  as serviceName 
		FROM
		scheduleship s where
		s.idship = 	#{idship} and
		s.arrivaldate = #{arrivaldate};
	</select>

	<select id="loadScheduleShipByArrivalDate" parameterType="map"
		resultType="org.uario.seaworkengine.model.ScheduleShip">
		SELECT s.id,
		s.idship, s.volume, s.note, s.arrivaldate, s.departuredate,
		s.rif_mct, s.customer_id, s.idship_activity, s.id_service, (SELECT sr.name FROM service sr where s.id_service=sr.id)  as serviceName 
		FROM
		scheduleship s where
		date(s.arrivaldate) =
		date(#{arrivaldate});
	</select>

	<select id="loadShipInDate" parameterType="map"
		resultType="org.uario.seaworkengine.model.Ship">
		SELECT sh.id, sh.name, sh.line, sh.shiptype,
		sh.shipcondition, sh.twtype, s.id as rifSWS, sh.nowork, sh.activityh, s.id_service, (SELECT sr.name FROM service sr where s.id_service=sr.id) as serviceName     
		FROM scheduleship s, ship sh
		WHERE
		sh.id=s.idship and date(#{shipDate}) >=
		date(s.arrivalDate) and
		date(s.departureDate)>=date(#{shipDate});
	</select>

	<update id="updateDetailScheduleShip" parameterType="org.uario.seaworkengine.model.DetailScheduleShip">
		UPDATE
		detailscheduleship SET
		idscheduleship = #{idscheduleship},
		shift =
		#{shift},
		operation = #{operation},
		iduser = #{iduser},
		idseconduser =
		#{idseconduser},
		handswork = #{handswork},
		menwork = #{menwork}, 
		handswork_program = #{handswork_program},
		menwork_program = #{menwork_program}, 
		shiftdate = #{shiftdate},
		notedetail = #{notedetail},
		activity_start = #{activity_start}, 
		activity_end = #{activity_end}, 
		rain = #{rain}, 
		wind = #{wind}, 
		sky = #{sky}, 
		temperature = #{temperature}, 
		first_down = #{first_down}, 
		last_down = #{last_down}, 
		worked = #{worked}, 
		person_down = #{person_down}, 
		person_onboard = #{person_onboard}    
		WHERE id = #{id};
	</update>


	<update id="updateDetailScheduleShipForMobile" parameterType="org.uario.seaworkengine.model.DetailScheduleShip">
		UPDATE
		detailscheduleship SET
		operation = #{operation}, 
		handswork =	#{handswork},
		menwork = #{menwork},  
		rain = #{rain}, 
		wind = #{wind}, 
		sky = #{sky}, 
		temperature = #{temperature}, 
		first_down = #{first_down}, 
		last_down = #{last_down}, 
		person_down = #{person_down}, 
		person_onboard = #{person_onboard}  
		WHERE id = #{id};
	</update>


	<insert id="createDetailFinalScheduleShip"
		parameterType="org.uario.seaworkengine.model.DetailFinalScheduleShip">
		INSERT INTO
		detailfinalscheduleship (crane,crane_gtw,
		volume, timework, iddetailscheduleship, notedetail,
		volumeunderboard,volumeunderboard_sws,
		volume_tw_mct,invoicing_cycle,
		activity_start, activity_end)
		VALUES
		(#{crane},#{crane_gtw},
		#{volume}, #{timework},
		#{iddetailscheduleship}, #{notedetail},
		#{volumeunderboard},
		#{volumeunderboard_sws},#{volume_tw_mct},#{invoicing_cycle},
		#{activity_start}, #{activity_end});
	</insert>

	<delete id="deleteDetailFinalScheduleShipById" parameterType="Integer">
		delete from
		detailfinalscheduleship
		where
		id = #{id}
	</delete>

	<select id="loadDetailFinalScheduleShipById" parameterType="Integer"
		resultType="org.uario.seaworkengine.model.DetailFinalScheduleShip">
		SELECT df.id, df.crane, df.crane_gtw volume, df.timework,
		df.iddetailscheduleship, df.notedetail, df.volumeunderboard,
		df.volumeunderboard_sws,
		df.volume_tw_mct, s.rif_mct, s.id as rif_sws,
		df.invoicing_cycle, activity_start, activity_end 
		FROM
		detailfinalscheduleship df,
		detailscheduleship
		d, scheduleship s
		where
		id = #{id} and
		df.iddetailscheduleship = d.id
		and
		d.idscheduleship =
		s.id;
	</select>

	<update id="updateDetailFinalScheduleShip"
		parameterType="org.uario.seaworkengine.model.DetailFinalScheduleShip">
		UPDATE detailfinalscheduleship
		SET
		id = #{id},
		crane =
		#{crane},
		crane_gtw = #{crane_gtw},
		timework = #{timework},
		volume =
		#{volume},
		iddetailscheduleship =
		#{iddetailscheduleship},
		notedetail =
		#{notedetail},
		volumeunderboard = #{volumeunderboard},
		volumeunderboard_sws = #{volumeunderboard_sws},
		volume_tw_mct =
		#{volume_tw_mct},
		invoicing_cycle = #{invoicing_cycle},
		activity_start =
		#{activity_start},
		activity_end = #{activity_end} 		
		WHERE id = #{id};
	</update>


	<select id="loadDetailFinalScheduleShipByIdDetailScheduleShip"
		resultType="org.uario.seaworkengine.model.DetailFinalScheduleShip"
		parameterType="Integer">
		SELECT df.id, df.crane,df.crane_gtw, df.volume,
		df.timework, df.iddetailscheduleship, df.notedetail,
		df.volumeunderboard,df.volumeunderboard_sws,
		df.volume_tw_mct,
		s.rif_mct, s.id as rif_sws, df.invoicing_cycle, df.activity_start,
		df.activity_end 
		FROM
		detailfinalscheduleship df,
		detailscheduleship d,
		scheduleship s where
		df.iddetailscheduleship =
		#{idDetailScheduleShip}
		and
		df.iddetailscheduleship = d.id and
		d.idscheduleship = s.id;
	</select>

</mapper>