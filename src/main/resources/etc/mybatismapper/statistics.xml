<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="statistics">

	<cache-ref namespace="schedule" />

	<select id="getShiftRecorded" resultType="double" parameterType="map">

		SELECT
		count(distinct s.date_schedule)
		FROM
		schedule s,
		usershift us
		where
		s.shift = us.id and us.recorded = 1
		and us.presence = 0
		and s.user =
		#{id_user}
		and s.date_schedule <![CDATA[>=]]>
		#{date_from}
		and s.date_schedule <![CDATA[<=]]>
		#{date_to}

	</select>






	<select id="listSchedule" resultType="org.uario.seaworkengine.model.Schedule"
		parameterType="map">

		select s.id,
		u.id as user,
		u.employee_identification as
		employee_identification,
		s.shift,
		s.date_schedule,
		concat(u.lastname, '
		', u.firstname) AS name_user,
		s.editor,
		s.controller
		from
		user u,
		schedule
		s
		where (u.id =
		s.user)

		<if test="date_from != null and date_to != null">
			and (s.date_schedule <![CDATA[>=]]>
			#{date_from} and s.date_schedule
			<![CDATA[<=]]>
			#{date_to})
		</if>

		<if test="my_full_text_search != null">
			and (u.firstname like CONCAT('%', #{my_full_text_search},
			'%') or
			u.lastname like CONCAT('%', #{my_full_text_search}, '%') or
			u.employee_identification = #{my_full_text_search})
		</if>

		<if test="date_from != null and date_to != null">
			and (s.date_schedule <![CDATA[>=]]>
			#{date_from} and s.date_schedule
			<![CDATA[<=]]>
			#{date_to})
		</if>

		<if test="shift_number != null">
			and (s.shift = #{shift_number})
		</if>

		order by u.lastname asc, s.date_schedule
	</select>




	<select id="overviewFinalSchedule" resultType="org.uario.seaworkengine.model.DetailFinalSchedule"
		parameterType="map">
		select
		concat(u.lastname, ' ', u.firstname) as user,
		u.employee_identification as employee_identification,
		dfs.id,
		dfs.id_schedule,
		dfs.shift,
		dfs.id_ship, dfs.crane as crane,
		s.shift as shift_type,
		dfs.task,
		dfs.time,
		dfs.time_vacation,
		dfs.time_from,
		dfs.time_to,
		dfs.board, dfs.reviewshift, 
		s.date_schedule,
		u.id as id_user
		from
		user u,
		schedule s left
		outer join
		detailfinalschedule dfs on
		(dfs.id_schedule = s.id)		
		where
		s.user = u.id 
		<if test="my_full_text_search != null">
			and (u.firstname like CONCAT('%', #{my_full_text_search},
			'%') or
			u.lastname like CONCAT('%', #{my_full_text_search}, '%') or
			u.employee_identification = #{my_full_text_search})
		</if>

		<if test="shift_number != null">
			and (dfs.shift = #{shift_number})
		</if>

		<if test="date_from != null and date_to != null">
			and (s.date_schedule <![CDATA[>=]]>
			#{date_from} and s.date_schedule
			<![CDATA[<=]]>
			#{date_to})
		</if>

		<if test="shift_type != null">
			and (s.shift = #{shift_type})
		</if>

		<if test="task_id != null">
			and (dfs.task = #{task_id})
		</if>

		order by u.lastname, s.date_schedule, dfs.shift asc

	</select>

	<select id="overviewInitalSchedule" resultType="org.uario.seaworkengine.model.DetailInitialSchedule"
		parameterType="map">
		select
		concat(u.lastname, ' ', u.firstname) as user,
		u.employee_identification as employee_identification,
		u.id as id_user,
		dfs.id,
		dfs.id_schedule,
		dfs.shift,
		s.shift as shift_type,
		dfs.task,
		dfs.time,
		dfs.time_vacation,
		dfs.time_from,
		dfs.time_to,
		s.date_schedule
		from
		user u,
		schedule s left outer join
		detailinitialschedule dfs on
		(dfs.id_schedule = s.id)
		where
		s.user =
		u.id

		<if test="my_full_text_search != null">
			and (u.firstname like CONCAT('%', #{my_full_text_search},
			'%') or
			u.lastname like CONCAT('%', #{my_full_text_search}, '%') or
			u.employee_identification = #{my_full_text_search})
		</if>

		<if test="date_from != null and date_to != null">
			and (s.date_schedule <![CDATA[>=]]>
			#{date_from} and s.date_schedule
			<![CDATA[<=]]>
			#{date_to})
		</if>

		<if test="shift_number != null">
			and (dfs.shift = #{shift_number})
		</if>

		<if test="shift_type != null">
			and (s.shift = #{shift_type})
		</if>

		<if test="task_id != null">
			and (dfs.task = #{task_id})
		</if>

		order by u.lastname, s.date_schedule, dfs.shift asc

	</select>





	<select id="datesBreak" resultType="java.util.Date"
		parameterType="map">
		select
		max(d.date_schedule) as date_break
		from
		schedule d,
		usershift s
		where
		d.date_schedule <![CDATA[>=]]>
		#{date_schedule_from}
		and d.date_schedule <![CDATA[<=]]>
		#{date_schedule_to}
		and s.break_shift = 1
		and d.shift = s.id and
		d.id_user = #{id_user}
	</select>


	<select id="timeWorkedProgram" resultType="int" parameterType="map">
		select
		sum(d_1.time)
		from
		schedule s_1,
		detailinitialschedule d_1
		where
		s_1.user = #{id_user}
		and s_1.id =
		d_1.id_schedule
		and s_1.date_schedule <![CDATA[<=]]>
		#{date_schedule_to}
		and s_1.date_schedule <![CDATA[>=]]>
		#{date_schedule_from}
	</select>

	<select id="timeWorkedReviewd" resultType="double" parameterType="map">
		select
		sum(d_1.time)
		from
		schedule s_1,
		detailfinalschedule d_1
		where
		s_1.user = #{id_user}
		and s_1.id =
		d_1.id_schedule
		and s_1.date_schedule <![CDATA[<=]]>
		#{date_schedule_to}
		and s_1.date_schedule <![CDATA[>=]]>
		#{date_schedule_from}
	</select>


	<select id="dateAtWork" resultType="java.util.Date"
		parameterType="map">
		select
		s.date_schedule
		from
		schedule s,
		usershift us
		where
		s.date_schedule <![CDATA[<=]]>
		#{date_schedule_to}
		and s.date_schedule <![CDATA[>=]]>
		#{date_schedule_from}
		and s.user = #{id_user}
		and s.shift = us.id
		and
		us.presence = 1
		order by s.date_schedule asc
	</select>









	<select id="selectRateShiftByUserProgram" resultType="org.uario.seaworkengine.statistics.RateShift"
		parameterType="map">
		select
		d_1.shift,
		sum(d_1.time) / (select
		sum(d_2.time) as global_sum
		from
		schedule s_2,
		detailinitialschedule d_2
		where
		s_2.user = #{id_user}
		and
		s_2.id =
		d_2.id_schedule
		and (s_2.date_schedule <![CDATA[<=]]>
		#{date_schedule} and s_2.date_schedule >= #{date_from})) * 100 as rate
		from
		schedule s_1,
		detailinitialschedule
		d_1
		where
		s_1.user = #{id_user}
		and s_1.id = d_1.id_schedule
		and
		(s_1.date_schedule <![CDATA[<=]]>
		#{date_schedule} and s_1.date_schedule >= #{date_from})
		group by
		d_1.shift
		order by rate asc

	</select>

	<select id="selectRateShiftByUserReviewd" resultType="org.uario.seaworkengine.statistics.RateShift"
		parameterType="map">
		select
		d_1.shift,
		sum(d_1.time) / (select
		sum(d_2.time) as global_sum
		from
		schedule s_2,
		detailfinalschedule d_2
		where
		s_2.user = #{id_user}
		and
		s_2.id =
		d_2.id_schedule
		and (s_2.date_schedule <![CDATA[<=]]>
		#{date_schedule} and s_2.date_schedule >= #{date_from})) * 100 as rate
		from
		schedule s_1,
		detailfinalschedule
		d_1
		where
		s_1.user = #{id_user}
		and
		s_1.id = d_1.id_schedule
		and
		(s_1.date_schedule <![CDATA[<=]]>
		#{date_schedule} and s_1.date_schedule >= #{date_from})
		group by
		d_1.shift
		order by rate asc

	</select>

	<select id="selectSundayWork" resultType="int" parameterType="map">


		select
		count(distinct ds.date_schedule)
		from
		schedule ds,
		usershift us,
		detailfinalschedule dfs
		where
		dfs.id_schedule =
		ds.id
		and ds.shift =
		us.id
		and us.presence = 1 and dfs.time <![CDATA[<>]]>
		0
		and DAYOFWEEK(ds.date_schedule) = 1
		and ds.user
		= #{id_user}
		and
		ds.date_schedule <![CDATA[>=]]>
		#{date_from} and ds.date_schedule <![CDATA[<=]]>
		#{date_to}

	</select>

	<select id="selectShiftSundayWorkCountReview" resultType="org.uario.seaworkengine.statistics.RateShift"
		parameterType="map">
		select
		dfs.shift as shift, count(distinct ds.date_schedule) rate
		from
		schedule ds,
		usershift us,
		detailfinalschedule dfs
		where
		dfs.id_schedule =
		ds.id
		and ds.shift = us.id
		and us.presence = 1
		and dfs.time <![CDATA[<>]]>
		0
		and DAYOFWEEK(ds.date_schedule) = 1
		and ds.user = #{id_user}
		and
		ds.date_schedule <![CDATA[>=]]>
		#{date_from} and ds.date_schedule <![CDATA[<=]]>
		#{date_to}
		group by shift
		order by shift

	</select>


	<select id="selectShiftSundayWorkCountProgram" resultType="org.uario.seaworkengine.statistics.RateShift"
		parameterType="map">
		select
		dfs.shift as shift, count(distinct ds.date_schedule) rate
		from
		schedule ds,
		usershift us,
		detailinitialschedule dfs
		where
		dfs.id_schedule =
		ds.id
		and ds.shift = us.id
		and us.presence = 1
		and
		dfs.time <![CDATA[<>]]>
		0
		and DAYOFWEEK(ds.date_schedule) = 1
		and ds.user = #{id_user}
		and
		ds.date_schedule <![CDATA[>=]]>
		#{date_from} and ds.date_schedule <![CDATA[<=]]>
		#{date_to}
		group by shift
		order by shift

	</select>




	<select id="getSundayAndHolidaysWork" resultType="int"
		parameterType="map">


		select
		count(distinct ss.date_schedule)
		from
		schedule ss,
		usershift uss,
		detailfinalschedule dfss
		where
		dfss.id_schedule = ss.id and dfss.time <![CDATA[<>]]>
		0
		and ss.date_schedule <![CDATA[>=]]>
		#{date_from} and ss.date_schedule <![CDATA[<=]]>
		#{date_to}
		and ss.user = #{id_user}
		and ss.shift = uss.id
		and
		uss.presence = 1
		and (date_format(ss.date_schedule, '%m-%d') in
		(${days_hol}))



	</select>


	<select id="getWorkCountByUser" resultType="double"
		parameterType="map">

		SELECT
		sum(time)
		FROM
		detailfinalschedule dfs,
		schedule s,
		usertask ut
		WHERE
		dfs.id_schedule = s.id and (ut.isabsence = 0 or ut.recorded = 1)
		and dfs.task = ut.id
		and s.user = #{id_user} and s.date_schedule <![CDATA[>=]]>
		#{date_from} and
		s.date_schedule <![CDATA[<=]]>
		#{date_to}

	</select>

</mapper>